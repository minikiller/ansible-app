---
- name: check server health based on redfish rest service
  hosts: all
  gather_facts: no
  vars:
    result: ok
  tasks:
    - name: Check if server is health
      block:
        - debug:
            var: inventory_hostname

        - name: do checking....
          uri:
            url: "http://{{ inventory_hostname }}:5000/redfish/v1/Systems/1"
            url_username: "{{ username }}"
            url_password: "{{ password }}"
            force_basic_auth: yes
            return_content: yes
            timeout: 10
            # status_code: 200
          register: contents
          delegate_to: localhost
        # - debug: var=contents

        - name: check if it is health
          debug: msg="{{ contents.json | json_query(jmesquery) }}"
          register: status
          vars:
            jmesquery: "{SerialNumber: SerialNumber, Model: Model, Manufacturer: Manufacturer, UUID: UUID, Health:Status.Health}"
          failed_when: status.msg.Health != "OK"
      rescue:
        - set_fact:
            result: failed
        - fail: 
            msg: error is happened
          when: result == "failed"
        - name:  
          debug:
            msg: 'I also never execute :-('
      always:
        - name: always to check result
          debug:
            msg: "all tasks are finished, result is {{ result }}"  
